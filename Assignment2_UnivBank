library(class)
library(caret)

# import dataset
UniversalBank <- read_excel("C:/Users/jovan/Downloads/UniversalBank.xlsx")
View(UniversalBank)

# convert to dummy frames
edu_mm <- model.matrix(~ factor(Education) - 1, data = UniversalBank)
colnames(edu_mm) <- c("Education_1", "Education_2", "Education_3")

UniversalBank <- cbind(
  UniversalBank[ , !(names(UniversalBank) %in% c("Education"))],
  as.data.frame(edu_mm)
)  # <-- closed cbind

# normalize data before modelling
norm_model <- preProcess(UniversalBank, method = c("range"))
UnivBank_normalized <- predict(norm_model, UniversalBank)

# set seed to reproduce; tune k on Income + CCAvg
set.seed(123)
Search_Grid <- expand.grid(k = c(2, 7, 9, 15))
model <- train(`Personal Loan` ~ Income + CCAvg,
               data = UniversalBank,
               method = "knn",
               tuneGrid = Search_Grid,
               preProcess = "range")
model

# define best_k here (so it's available before any knn() uses it)
best_k <- model$bestTune$k
best_k

# use 60% of data for training and the rest for testing
Index_Train <- createDataPartition(UnivBank_normalized$`Personal Loan`,
                                   p = 0.6,
                                   list = FALSE)
Train <- UnivBank_normalized[Index_Train[,1], ]
Test  <- UnivBank_normalized[-Index_Train[,1], ]

# column 10 is the class output (Personal Loan) â†’ factor vectors
Train_labels <- factor(Train[[10]])
Test_labels  <- factor(Test[[10]])

# predictors = all columns except column 10
Train_Predictors <- Train[ , !(names(Train) %in% c("ID", "ZIP Code", "Personal Loan")), drop = FALSE]
Test_Predictors  <- Test[  , !(names(Test)  %in% c("ID", "ZIP Code", "Personal Loan")),  drop = FALSE]

# k-NN with best k
set.seed(123)
Predicted_Test_bestk <- knn(train = Train_Predictors,
                            test  = Test_Predictors,
                            cl    = Train_labels,
                            k     = best_k)

# confusion matrix
CrossTable(x = Test_labels,
           y = Predicted_Test_bestk,
           prop.chisq = FALSE)

# QUESTION 1: classify given customer with k = 1 

# build new customer row
new_customer <- as.data.frame(t(rep(0, ncol(UniversalBank))))
names(new_customer) <- names(UniversalBank)

# fill in values from question
new_customer$Age <- 40
new_customer$Experience <- 10
new_customer$Income <- 84
new_customer$Family <- 2
new_customer$CCAvg <- 2
# set Education as dummies (not a raw 'Education' column)
new_customer$Education_1 <- 0
new_customer$Education_2 <- 1
new_customer$Education_3 <- 0
new_customer$Mortgage <- 0
new_customer$`Securities Account` <- 0
new_customer$`CD Account` <- 0
new_customer$Online <- 1
new_customer$CreditCard <- 1
new_customer$`Personal Loan` <- NA

# normalize with the SAME model used on training/test
new_customer_norm <- predict(norm_model, new_customer)

# drop target column for predictors (by name)
new_customer_pred <- new_customer_norm[ , !(names(new_customer_norm) %in% c("ID", "ZIP Code", "Personal Loan")), drop = FALSE]

# classify with k = 1
set.seed(123)
Predicted_new_k1 <- knn(train = Train_Predictors,
                        test  = new_customer_pred,
                        cl    = Train_labels,
                        k     = 1)

Predicted_new_k1

# determine best k (question 4)
best_k <- model$bestTune$k
best_k

# classify with best k
set.seed(123)
Predicted_new_bestk <- knn(train = Train_Predictors,
                           test  = new_customer_pred,
                           cl    = Train_labels,
                           k     = best_k)

Predicted_new_bestk

# use best k from model (15)
best_k <- 15
best_k

# 50% TRAIN
set.seed(123)
Index_Train50 <- createDataPartition(UnivBank_normalized$`Personal Loan`, p = 0.5, list = FALSE)
Train50 <- UnivBank_normalized[Index_Train50[,1], ]
Temp    <- UnivBank_normalized[-Index_Train50[,1], ]

# Of the remaining 50%, take 60% for VALID (i.e., 30% overall), rest 40% is TEST (20% overall)
Index_Valid30 <- createDataPartition(Temp$`Personal Loan`, p = 0.6, list = FALSE)
Valid30 <- Temp[Index_Valid30[,1], ]
Test20  <- Temp[-Index_Valid30[,1], ]

# Labels as factor vectors (column 10 = Personal Loan)
Train50_labels <- factor(Train50[[10]])
Valid30_labels <- factor(Valid30[[10]])
Test20_labels  <- factor(Test20[[10]])

# Predictors = all columns except column 10
Train50_Predictors <- Train50[, -10, drop = FALSE]
Valid30_Predictors <- Valid30[, -10, drop = FALSE]
Test20_Predictors  <- Test20[,  -10, drop = FALSE]

# k-NN with best k = 15
set.seed(123)
Pred_Train50 <- knn(train = Train50_Predictors,
                    test  = Train50_Predictors,
                    cl    = Train50_labels,
                    k     = best_k)

set.seed(123)
Pred_Valid30 <- knn(train = Train50_Predictors,
                    test  = Valid30_Predictors,
                    cl    = Train50_labels,
                    k     = best_k)

set.seed(123)
Pred_Test20 <- knn(train = Train50_Predictors,
                   test  = Test20_Predictors,
                   cl    = Train50_labels,
                   k     = best_k)

# TRAIN (50%)
CrossTable(x = Train50_labels,
           y = Pred_Train50,
           prop.chisq = FALSE)

# VALID (30%)
CrossTable(x = Valid30_labels,
           y = Pred_Valid30,
           prop.chisq = FALSE)

# TEST (20%)
CrossTable(x = Test20_labels,
           y = Pred_Test20,
           prop.chisq = FALSE)
